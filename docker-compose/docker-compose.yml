version: "3.8"

volumes:
  portainer_data:
    driver: local

services:
###NETWORK
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "9080:80/tcp"
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD: '${PIHOLE_PW}'
      DNSMASQ_LISTENING: 'all'
      PIHOLE_DNS_: '9.9.9.9;149.112.112.112' #quad9
      FTLCONF_LOCAL_IPV4: '192.168.1.87'
      DNSSEC: 'true'
    volumes:
      - '${DATA_DIR}/etc-pihole:/etc/pihole'
      - '${DATA_DIR}/etc-dnsmasq.d:/etc/dnsmasq.d'
    restart: unless-stopped
  
  speedtest:
    container_name: speedtest
    image: henrywhitaker3/speedtest-tracker
    ports:
      - '8765:80'
    volumes:
      - "${DATA_DIR}/speedtest/config:/config"
    environment:
      TZ: 'America/New_York'
      OOKLA_EULA_GDPR: 'true'
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    restart: unless-stopped

###MEDIA
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - TZ=America/New_York
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - /media/plex_library/:/config
      - /media/plex_library/music/:/music
      - /media/plex_library/tv/:/tv
      - /media/plex_library/movies/:/movies
    restart: unless-stopped

###HOME
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    network_mode: host
    volumes:
      - ${DATA_DIR}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true

  homebridge:
    image: homebridge/homebridge:ubuntu
    container_name: homebridge
    restart: always
    network_mode: host
    environment:
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
      - HOMEBRIDGE_CONFIG_UI=1
    volumes:
      - ${DATA_DIR}/homebridge:/homebridge

###ETC
  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
    - "18080:80"
    volumes:
    - ${DATA_DIR}/nginx/website:/usr/share/nginx/html

  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${DATA_DIR}/portainer_data:/data"
    restart: always






